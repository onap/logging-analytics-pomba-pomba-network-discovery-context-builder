<?xml version="1.0" encoding="UTF-8"?>
<!--
============LICENSE_START===================================================
Copyright (c) 2018 Amdocs
============================================================================
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
============LICENSE_END====================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.onap.logging-analytics.pomba</groupId>
    <artifactId>pomba-network-discovery-context-builder</artifactId>
    <version>1.5.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
      <groupId>org.onap.oparent</groupId>
      <artifactId>oparent</artifactId>
      <version>2.0.0</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <swagger.directory>${project.build.directory}/generated-resources/swagger</swagger.directory>
        <!--docker -->
        <docker.tag>${project.version}-${timestamp}</docker.tag>
        <docker.latest.tag>${project.version}-latest</docker.latest.tag>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>1.5.22.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Springframework dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-json</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
           <groupId>com.sun.jersey</groupId>
           <artifactId>jersey-client</artifactId>
           <version>1.19.4</version>
           <exclusions>
             <exclusion>
               <groupId>javax.ws.rs</groupId>
               <artifactId>jsr311-api</artifactId>
             </exclusion>
           </exclusions>
        </dependency>

        <!--  logging dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- swagger dependencies -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>1.5.9</version>
        </dependency>
        <!-- application dependencies -->
        <dependency>
            <groupId>org.onap.sdnc.apps.pomba</groupId>
            <artifactId>network-discovery-api</artifactId>
            <version>1.4.1</version>
        </dependency>
        <dependency>
           <groupId>org.onap.logging-analytics.pomba</groupId>
           <artifactId>pomba-audit-common</artifactId>
           <version>1.5.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>

        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
           <groupId>org.json</groupId>
           <artifactId>json</artifactId>
        </dependency>
        <dependency>
           <groupId>com.bazaarvoice.jolt</groupId>
           <artifactId>jolt-core</artifactId>
           <version>0.1.1</version>
        </dependency>
        <dependency>
            <groupId>com.bazaarvoice.jolt</groupId>
            <artifactId>json-utils</artifactId>
            <version>0.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.9</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.9</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>2.18.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.onap.aai</groupId>
            <artifactId>rest-client</artifactId>
            <version>1.2.1</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.28.0</version>
                        <configuration>
                            <verbose>true</verbose>
                            <apiVersion>1.23</apiVersion>
                            <images>
                                <image>
                                    <name>onap/${project.artifactId}</name>
                                    <alias>${project.artifactId}</alias>
                                    <build>
                                        <cleanup>try</cleanup>
                                        <dockerFileDir>${project.basedir}/target/docker-stage</dockerFileDir>
                                        <tags>
                                            <tag>${docker.snapshot.tag}</tag>
                                            <tag>${docker.latest.tag}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate-images</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>push-images</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.kongchen</groupId>
                        <artifactId>swagger-maven-plugin</artifactId>
                        <version>3.1.7</version>
                        <configuration>
                            <apiSources>
                                <apiSource>
                                    <locations>
                                        <location>org.onap.pomba.contextbuilder.networkdiscovery.service.rs</location>
                                    </locations>
                                    <basePath>/{${project.artifactId}</basePath>
                                    <info>
                                        <title>Network Discovery Context Builder API</title>
                                        <version>${project.version}</version>
                                        <termsOfService>http://onap.org</termsOfService>
                                    </info>
                                    <securityDefinitions>
                                        <securityDefinition>
                                            <name>basicAuth</name>
                                            <type>basic</type>
                                        </securityDefinition>
                                    </securityDefinitions>
                                    <swaggerDirectory>${swagger.directory}</swaggerDirectory>
                                </apiSource>
                            </apiSources>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-dockerfile</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals><!-- here the phase you need -->
                                <phase>package</phase>
                                <configuration>
                                    <outputDirectory>${project.basedir}/target/docker-stage</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/docker</directory>
                                            <includes>
                                                <include>Dockerfile</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-properties</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <outputDirectory>${project.basedir}/target/docker-stage/config</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>config</directory>
                                            <includes>
                                                <include>*.properties</include>
                                                <include>*.xml</include>
                                                <include>**/*.json</include>
                                            </includes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-script</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <outputDirectory>${project.basedir}/target/docker-stage/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/docker</directory>
                                            <includes>
                                                <include>*.sh</include>
                                            </includes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-jar</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <outputDirectory>${project.basedir}/target/docker-stage/</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>target</directory>
                                            <includes>
                                                <include>*.jar</include>
                                            </includes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
